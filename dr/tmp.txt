План на дипломния проект
1. Титулна страница (1 страница)
Наименование на училището
Населено място
Тема на дипломния проект
Трите имена на ученика
Професия и специалност
Име и фамилия на ръководителя/консултанта
2. Съдържание (1 страница)
Списък със заглавия на всичките глави и секции с посочване на страниците.
3. Увод (въведение) (2 страници)
Кратко описание на целите на проекта.
Значение на темата.
Обзор на основните резултати.
4. Основна част (20 страници)
4.1. Цел и задачи (2 страници)
Формулиране на целта на проекта.
Задачи, които трябва да бъдат решени.
4.2. Теоретичен обзор на Django (3 страници)
Описание на Django като уеб фреймуърк.
Основни компоненти на Django: модели, шаблони, изгледи.
4.3. Генериране на динамични страници (5 страници)
Шаблонизатор в Django.
Наследяване и разширяване на шаблони.
Генериране и използване на контекст.
4.4. Анализ на известни решения (3 страници)
Описание и сравнение на съществуващи онлайн менюта.
Литературни източници и примери.
4.5. Избор на технологии и решения (4 страници)
Технологии, използвани в проекта.
Аргументация за избор на алгоритми и програмни решения.
Примери от приложението, описващи определени функционалности.
4.6. Приноси на проекта (3 страници)
Какво ново предлага проектът?
Решения на поставените задачи.
5. Заключение (2 страници)
Изводи от реализирания проект.
Предложения за бъдещо развитие и подобрения.
Възможности за приложение на разработката.
6. Списък на използваната литература (1 страница)
Азбучен ред на всички използвани източници по фамилия на авторите.
7. Приложения (1-2 страници)
Документация и код, който не е включен в основната част.
Препратки в текста към приложенията.



/////////////////////////////
<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Моето онлайн меню{% endblock %}</title>
</head>
<body>
    <header>
        <h1>Добре дошли в нашето ресторантско меню!</h1>
    </header>
    <main>
        {% block content %}
        {% endblock %}
    </main>
    <footer>
        <p>© 2025 Ресторант. Всички права запазени.</p>
    </footer>
</body>
</html>


////////////////////

def menu_view(request):
    dishes = Dish.objects.all()  # Извлича всички ястия от базата данни
    context = {
        'dishes': dishes
    }
    return render(request, 'menu.html', context)


    //////////////////


    <!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <title>Онлайн меню</title>
</head>
<body>
    <h1>Меню</h1>
    <ul>
        {% for dish in dishes %}
            <li>{{ dish.name }} - {{ dish.price }} лв.</li>
        {% endfor %}
    </ul>
</body>
</html>

/////


<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Онлайн меню{% endblock %}</title>
</head>
<body>
    <header>
        <h1>{% block header %}Добре дошли в нашето меню{% endblock %}</h1>
    </header>
    <main>
        {% block content %}{% endblock %}
    </main>
    <footer>
        <p>© 2025 Ресторант. Всички права запазени.</p>
    </footer>
</body>
</html>

///


{% extends 'base.html' %}

{% block title %}Меню на ресторанта{% endblock %}

{% block content %}
    <h2>Налични ястия</h2>
    <ul>
        {% for dish in dishes %}
            <li>{{ dish.name }} - {{ dish.price }} лв.</li>
        {% endfor %}
    </ul>
{% endblock %}
///

from django.shortcuts import render
from .models import Dish

def menu_view(request):
    dishes = Dish.objects.all()  # Извлича всички налични ястия
    context = {
        'dishes': dishes
    }
    return render(request, 'menu.html', context)

    ///


   function updateMenu() {
    $.ajax({
        url: '/api/menu/',
        method: 'GET',
        success: function(data) {
            $('#menu-list').empty(); // Изчистване на текущото меню
            data.forEach(function(dish) {
                $('#menu-list').append('<li>' + dish.name + ' - ' + dish.price + ' лв.</li>');
            });
        }
    });
}

setInterval(updateMenu, 30000); // обновяване на менюто на всеки 30 секунди

////



class Group(models.Model):
    name = models.CharField('Наименование', max_length=50, default='', blank=True)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = 'Раздел в менюто'
        verbose_name_plural = 'Раздели в менюто'

       ////////////



       class MenuItem(models.Model):
    name = models.CharField('Наименование', max_length=100, default='', blank=True)
    description = models.TextField('Описание', default='', blank=True)
    price = models.DecimalField('Цена', max_digits=6, decimal_places=2, default=0)
    photo = models.ImageField('Снимка', upload_to='menu', blank=True)
    section = models.ForeignKey(Group, verbose_name='Раздел/група', on_delete=models.CASCADE)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = 'Позиция в менюто'
        verbose_name_plural = 'Позиции в менюто'

       ////////////

       group1 = Group.objects.create(name='Предястия')
group2 = Group.objects.create(name='Десерти')

MenuItem.objects.create(name='Салата Цезар', description='Свежа салата с римска маруля...', price=5.50, section=group1)
MenuItem.objects.create(name='Шоколадов мус', description='Лек и въздушен десерт...', price=3.20, section=group2)



